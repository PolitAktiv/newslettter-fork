package net.zylk.liferay.portal.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the SubscriptorCategory service. Represents a row in the &quot;ZN_SubscriptorCategory&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link net.zylk.liferay.portal.model.impl.SubscriptorCategoryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link net.zylk.liferay.portal.model.impl.SubscriptorCategoryImpl}.
 * </p>
 *
 * @author zylk.net
 * @see SubscriptorCategory
 * @see net.zylk.liferay.portal.model.impl.SubscriptorCategoryImpl
 * @see net.zylk.liferay.portal.model.impl.SubscriptorCategoryModelImpl
 * @generated
 */
public interface SubscriptorCategoryModel extends BaseModel<SubscriptorCategory> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a subscriptor category model instance should use the {@link SubscriptorCategory} interface instead.
     */

    /**
     * Returns the primary key of this subscriptor category.
     *
     * @return the primary key of this subscriptor category
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this subscriptor category.
     *
     * @param primaryKey the primary key of this subscriptor category
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the subscriptor category ID of this subscriptor category.
     *
     * @return the subscriptor category ID of this subscriptor category
     */
    public long getSubscriptorCategoryId();

    /**
     * Sets the subscriptor category ID of this subscriptor category.
     *
     * @param subscriptorCategoryId the subscriptor category ID of this subscriptor category
     */
    public void setSubscriptorCategoryId(long subscriptorCategoryId);

    /**
     * Returns the subscriptor ID of this subscriptor category.
     *
     * @return the subscriptor ID of this subscriptor category
     */
    public long getSubscriptorId();

    /**
     * Sets the subscriptor ID of this subscriptor category.
     *
     * @param subscriptorId the subscriptor ID of this subscriptor category
     */
    public void setSubscriptorId(long subscriptorId);

    /**
     * Returns the category ID of this subscriptor category.
     *
     * @return the category ID of this subscriptor category
     */
    public long getCategoryId();

    /**
     * Sets the category ID of this subscriptor category.
     *
     * @param categoryId the category ID of this subscriptor category
     */
    public void setCategoryId(long categoryId);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(SubscriptorCategory subscriptorCategory);

    @Override
    public int hashCode();

    @Override
    public CacheModel<SubscriptorCategory> toCacheModel();

    @Override
    public SubscriptorCategory toEscapedModel();

    @Override
    public SubscriptorCategory toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
